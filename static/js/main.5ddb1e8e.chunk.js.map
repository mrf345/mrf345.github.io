{"version":3,"sources":["serviceWorker.ts","utils.ts","state/constants.ts","state/reducers.ts","globas.ts","state/sagas.ts","state/store.ts","state/middleware.ts","containers/ErrorHandler.tsx","containers/Navigation.tsx","state/actions.ts","components/Animate.tsx","components/Loading.tsx","containers/LoadingContainer.tsx","components/Panel.tsx","components/Cursor.tsx","containers/Intro.tsx","containers/Projects.tsx","containers/Following.tsx","components/Top.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","getChunks","iterable","chunkSize","reduce","prevVal","currVal","currIndx","array","concat","slice","isEmpty","value","Array","isArray","length","Object","keys","gitLink","account","endpoint","undefined","limit","clean","sortReposByLikes","repos","sort","a","b","stargazers_count","initialState","info","following","starred","contributions","error","resync","loading","AnimationContext","createContext","watchInfo","watchRepos","watchFollowing","watchStarred","watchContributions","gitFetcher","allData","Promise","resolve","reject","recursFetching","link","page","fetch","then","resp","json","data","catch","takeEvery","call","payload","put","type","select","state","all","filter","repo","fork","map","name","fullRepo","assign","parent","html_url","delay","initialSagaMiddleware","createSagaMiddleware","storeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","dispatch","getState","next","action","store","createStore","values","sagas","forEach","saga","run","ErrorHandler","props","errors","err","this","setState","Container","className","Row","Col","role","aria-label","index","key","message","stack","children","React","Component","Navigation","resyncInterval","fetchData","getInfo","getRepos","getFollowing","getContributions","resyncData","setInterval","isLoading","dataSynced","clearInterval","document","title","Navbar","collapseOnSelect","fixed","expand","variant","url","avatar_url","Toggle","aria-controls","Collapse","id","Nav","exact","to","Link","Image","src","roundedCircle","fluid","Badge","r","onClick","disabled","icon","faSync","size","spin","href","target","faGithubSquare","connect","getStarred","Animate","animate","animation","LoadingOverlay","animationIn","animationOut","isVisible","faSpinner","LoadingContainer","pathname","withRouter","Panel","animator","handleClick","e","clickAnimation","goto","current","setTimeout","open","createRef","measures","header","body","img","rest","showAnimation","context","md","span","offset","lg","ref","Card","Header","style","text","Body","rounded","footer","Footer","left","right","center","contextType","Cursor","navLink","path","Intro","scrollTo","scrollHeight","animationInDelay","intro","join","origin","fontSize","ProjectsComp","scroll","toggleAnimation","counter","chunk","Math","random","toString","faThumbsUp","faCog","language","description","Projects","Likes","Contributions","Following","user","login","Top","updateHight","height","resetHeight","shouldShow","scrollY","scrollTop","scrollToTop","addEventListener","Events","scrollEvent","register","removeEventListener","remove","opacity","faArrowUp","Main","some","status","isLargeScreen","screen","width","Provider","component","faGithub","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.5ddb1e8e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","type GitEndpoints = 'repos'|'starred'|'gists'|'following'\n\n\nexport function getChunks (iterable:any[], chunkSize: number): Array<Array<any>> {\n    return iterable.reduce((prevVal: any, currVal: any, currIndx: number, array: Array<any>) => !(currIndx % chunkSize)\n        ? prevVal.concat([array.slice(currIndx, currIndx + chunkSize)])\n        : prevVal, [])\n}\n\n\nexport function isEmpty(value:any):boolean {\n    return typeof(value) === 'object'\n        ? Array.isArray(value)\n            ? !value.length\n            : !Object.keys(value).length\n        : !value\n}\n\n\nexport function gitLink(account:string, endpoint:GitEndpoints|undefined = undefined, limit = 100, clean = false):string {\n    return endpoint\n        ? clean\n            ? `https://api.github.com/${endpoint}/${account}`\n            : `https://api.github.com/users/${account}/${endpoint}?per_page=${limit}&sort=updated`\n        : `https://api.github.com/users/${account}`\n}\n\n\nexport function sortReposByLikes(repos:any) {\n    return repos.sort((a:Repository, b:Repository) => b.stargazers_count - a.stargazers_count)\n}\n","export const GET_INFO = 'GET_INFO'\nexport const GET_REPOS = 'GET_REPOS'\nexport const GET_FOLLOWING = 'GET_FOLLOWING'\nexport const GET_STARRED = 'GET_STARRED'\nexport const GET_CONTRIBUTIONS = 'GET_CONTRIBUTIONS'\nexport const INFO_LOADED = 'INFO_LOADED'\nexport const REPOS_LOADED = 'REPOS_LOADED'\nexport const FOLLOWING_LOADED = 'FOLLOWING_LOADED'\nexport const STARRED_LOADED = 'STARRED_LOADED'\nexport const CONTRIBUTIONS_LOADED = 'CONTRIBUTIONS_LOADED'\nexport const API_ERROR = 'API_ERROR'\nexport const ALREADY_LOADED = 'ALREADY_LOADED'\nexport const RESYNC_DATA = 'RESYNC_DATA'\nexport const DATA_SYNCED = 'DATA_SYNCED'\n","import { sortReposByLikes } from '../utils'\nimport { INFO_LOADED, REPOS_LOADED, FOLLOWING_LOADED, STARRED_LOADED, API_ERROR, ALREADY_LOADED, GET_INFO,\n         GET_REPOS, GET_FOLLOWING, GET_STARRED, RESYNC_DATA, DATA_SYNCED, GET_CONTRIBUTIONS, CONTRIBUTIONS_LOADED } from './constants'\n\n\nconst initialState = {\n    info: {},\n    repos: [],\n    following: [],\n    starred: [],\n    contributions: [],\n    error: undefined,\n    resync: false,\n    loading: {info: true,\n              repos: true,\n              following: true,\n              starred: false,\n              contributions: true}\n}\n\n\nexport default function  main(state = initialState, action:Action) {\n    const { loading } = state\n\n    switch(action.type) {\n        case GET_INFO:\n            return Object.assign({}, state, {loading: {...loading, info: true}})\n        case GET_REPOS:\n            return Object.assign({}, state, {loading: {...loading, repos: true}})\n        case GET_FOLLOWING:\n            return Object.assign({}, state, {loading: {...loading, following: true}})\n        case GET_STARRED:\n            return Object.assign({}, state, {loading: {...loading, starred: true}})\n        case GET_CONTRIBUTIONS:\n            return Object.assign({}, state, {loading: {...loading, contributions: true}})\n        case INFO_LOADED:\n            return Object.assign({}, state, {info: action.payload,\n                                             loading: {...loading, info: false}})\n        case REPOS_LOADED:\n            return Object.assign({}, state, {repos: sortReposByLikes(action.payload),\n                                             loading: {...loading, repos: false}})\n        case FOLLOWING_LOADED:\n            return Object.assign({}, state, {following: action.payload, \n                                             loading: {...loading, following: false}})\n        case STARRED_LOADED:\n            return Object.assign({}, state, {starred: sortReposByLikes(action.payload),\n                                             loading: {...loading, starred: false}})\n        case CONTRIBUTIONS_LOADED:\n            return Object.assign({}, state, {contributions: sortReposByLikes(action.payload),\n                                             loading: {...loading, contributions: false}})\n        case API_ERROR:\n            return Object.assign({}, state, {error: action.payload})\n        case RESYNC_DATA:\n            return Object.assign({}, state, {resync: true})\n        case DATA_SYNCED:\n            return Object.assign({}, state, {resync: false})\n        case ALREADY_LOADED:\n            return state\n        default:\n            return state\n    }\n}\n","import { createContext } from 'react'\n\n// Disable or enable animation\nexport const AnimationContext = createContext(true)\n\n\n// Duration to delay execution for in milliseconds\n// increased to give a processing effect\nexport const LOOP_DELAY = 1500\n","import { call, put, takeEvery, select, delay } from 'redux-saga/effects'\nimport { fetch } from 'whatwg-fetch'\n\nimport info from '../config.json'\nimport { gitLink } from '../utils'\nimport { LOOP_DELAY } from '../globas'\nimport { API_ERROR, GET_INFO, INFO_LOADED, GET_REPOS, REPOS_LOADED, GET_FOLLOWING, FOLLOWING_LOADED,\n         GET_STARRED, STARRED_LOADED, GET_CONTRIBUTIONS, CONTRIBUTIONS_LOADED } from './constants'\n\n\nfunction gitFetcher(endpoint:any = undefined, limit = 100) {\n    const { account } = info\n    let allData:any\n\n    return new Promise((resolve, reject) => {\n        function recursFetching(link = gitLink(account, endpoint, limit), page = 1) {\n            fetch(link)\n                .then((resp:any) => resp.json())\n                .then((data:any) => {\n                    if (Array.isArray(data)) {\n                        allData = [...(allData || []), ...data]\n\n                        if (data.length && limit >= data.length) {\n                            return recursFetching(`${link}&page=${page + 1}`, page + 1)\n                        } else return resolve(allData)\n                    } else return resolve(data)\n                }).catch((error:Error) => reject(error))\n        }\n\n        recursFetching()\n    })\n}\n\n\nexport function* watchInfo() {\n    yield takeEvery(GET_INFO, function* () {\n        try {\n            const payload = yield call(() => gitFetcher())\n\n            yield put({type: INFO_LOADED, payload})\n        } catch(error) {\n            yield put({type: API_ERROR, payload: error})\n        }\n    })\n}\n\n\nexport function* watchRepos() {\n    yield takeEvery(GET_REPOS, function* () {\n        try {\n            const payload = yield call(() => gitFetcher('repos'))\n\n            yield put({type: REPOS_LOADED, payload})\n        } catch(error) {\n            yield put({type: API_ERROR, payload: error})\n        }\n    })\n}\n\n\nexport function* watchFollowing() {\n    yield takeEvery(GET_FOLLOWING, function* () {\n        try {\n            const payload = yield call(() => gitFetcher('following'))\n\n            yield put({type: FOLLOWING_LOADED, payload})\n        } catch(error) {\n            yield put({type: API_ERROR, payload: error})\n        }\n    })\n}\n\n\nexport function* watchStarred() {\n    yield takeEvery(GET_STARRED, function* () {\n        try {\n            const payload = yield call(() => gitFetcher('starred'))\n\n            yield put({type: STARRED_LOADED, payload})\n        } catch(error) {\n            yield put({type: API_ERROR, payload: error})\n        }\n    })\n}\n\n\nexport function* watchContributions() {\n    const { account } = info\n\n    yield takeEvery(GET_CONTRIBUTIONS, function* () {\n        try {\n            while (yield select((state:State) => state.loading.contributions)) {\n                const { repos, loading } = yield select((state:State) => state)\n\n                if (!loading.repos) {\n                    const payload = yield call(() => Promise.all(\n                        repos.filter((repo:Repository) => repo.fork)\n                             .map((repo:Repository) => {\n                                return fetch(`${gitLink(account, 'repos', undefined, true)}/${repo.name}`)\n                                        .then((resp:any) => resp.json())\n                                        .then((fullRepo:any) =>\n                                            Object.assign({}, fullRepo.parent, {html_url: `${fullRepo.parent.html_url}/pulls?q=is:pr+author:${account}`}))\n                            })))\n    \n                    yield put({type: CONTRIBUTIONS_LOADED, payload})\n                }\n\n                yield delay(LOOP_DELAY)\n            }\n        } catch(error) {\n            yield put({type: API_ERROR, payload:error})\n        }\n    })\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport mainReducer from './reducers'\nimport { fetchOnlyIfNeeded } from './middleware'\nimport * as sagas from './sagas'\n\n\ndeclare global {\n    interface Window {__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:any}\n}\n\n\nconst initialSagaMiddleware = createSagaMiddleware()\nconst storeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst middleware = applyMiddleware(fetchOnlyIfNeeded, initialSagaMiddleware)\nconst store = createStore(mainReducer, storeEnhancer(middleware))\n\n\nObject.values(sagas)\n      .forEach(saga => initialSagaMiddleware.run(saga))\n\n\nexport default store\n","import { GET_INFO, ALREADY_LOADED, GET_REPOS, GET_FOLLOWING, GET_STARRED } from './constants'\nimport { isEmpty } from '../utils'\n\n\nexport function fetchOnlyIfNeeded({dispatch, getState}:any) {\n    return function(next:any) {\n        return function(action:any) {\n            const state:State = getState()\n\n            if (!state.resync) switch(action.type) {\n                case GET_INFO:\n                    if (!isEmpty(state.info)) return dispatch({type: ALREADY_LOADED})\n                    break\n                case GET_REPOS:\n                    if (!isEmpty(state.repos)) return dispatch({type: ALREADY_LOADED})\n                    break\n                case GET_FOLLOWING:\n                    if (!isEmpty(state.following)) return dispatch({type: ALREADY_LOADED})\n                    break\n                case GET_STARRED:\n                    if (!isEmpty(state.starred)) return dispatch({type: ALREADY_LOADED})\n                    break\n            }\n\n            return next(action)\n        }\n    }\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\ninterface ErrorHandlerState {\n    errors:Error[]\n}\n\n\nexport default class ErrorHandler extends React.Component<any, ErrorHandlerState> {\n    constructor(props:any) {\n        super(props)\n\n        this.state = {errors: []}\n    }\n\n    componentDidCatch(err:Error) {\n        this.setState({errors: [...this.state.errors, err]})\n    }\n\n    render() {\n        return this.state.errors.length\n            ? <Container className=\"text-center\">\n                <Row>\n                    <Col className=\"mb-3 mt-3\">\n                        <h1>Oh snap! Something went wrong <span role='img' aria-label='crying!'>😭</span></h1>\n                    </Col>\n                </Row>\n                {this.state.errors.map((err, index) => <Row key={index} >\n                    <Col className=\"mt-2\">\n                        <h3>{index + 1}. {err.name}: {err.message}</h3>\n                        <p><i>{err.stack}</i></p>\n                    </Col>\n                </Row>)}\n            </Container>\n            : this.props.children\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Nav, Navbar, Badge, Image } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithubSquare } from '@fortawesome/free-brands-svg-icons'\nimport { faSync } from '@fortawesome/free-solid-svg-icons'\nimport Favicon from 'react-favicon'\n\nimport info from '../config.json'\nimport { LOOP_DELAY } from '../globas'\nimport { getInfo, getStarred, getRepos, getFollowing, resyncData,\n         dataSynced, getContributions } from '../state/actions'\n\ninterface NavigationProps extends State {\n    getInfo:Function\n    getStarred:Function\n    getRepos:Function\n    getFollowing:Function\n    getContributions:Function\n    resyncData:Function\n    dataSynced:Function\n    isLoading(loading:Loading):boolean\n}\n\n\nconst mapStateToProps = (state:State) => {\n    return state\n}\n\n\nclass Navigation extends React.Component<NavigationProps> {\n    resyncInterval:any\n\n    constructor(props:NavigationProps) {\n      super(props)\n\n      this.resyncInterval = undefined\n    }\n\n    componentDidMount() {\n      this.fetchData()\n    }\n\n    componentWillUnmount() {\n      if (this.resyncInterval) clearInterval(this.resyncInterval)\n    }\n\n    componentDidUpdate() {\n      window.document.title = `${this.props.info.name}'s portfolio`\n    }\n\n    fetchData = () => {\n      this.props.getInfo()\n      this.props.getRepos()\n      // this.props.getStarred()\n      this.props.getFollowing()\n      this.props.getContributions()\n    }\n\n    resyncData = () => {\n      this.props.resyncData()\n      this.fetchData()\n\n      this.resyncInterval = setInterval(() => {\n        if (!this.props.isLoading(this.props.loading)) {\n          this.props.dataSynced()\n          clearInterval(this.resyncInterval)\n        }\n      }, LOOP_DELAY)\n    }\n\n    render() {\n        return (\n            <Navbar collapseOnSelect\n                    className=\"animated fadeInDown\"\n                    fixed=\"top\"\n                    expand=\"sm\"\n                    variant=\"dark\">\n                <Favicon url={this.props.info.avatar_url} />\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                  <Nav className=\"mr-auto\">\n                    <LinkContainer exact to=\"/\" className=\"brand\">\n                      <Nav.Link>\n                        <Image src={this.props.info.avatar_url} roundedCircle fluid />\n                      </Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/projects\" className='nav-projects'>\n                      <Nav.Link>\n                        Projects\n                        <br />\n                        <Badge>\n                          {this.props.repos.filter(r => !r.fork).length}\n                        </Badge>\n                      </Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/contributions\">\n                      <Nav.Link>\n                        Contributions\n                        <br />\n                        <Badge>\n                          {this.props.contributions.length}\n                        </Badge>\n                      </Nav.Link>\n                    </LinkContainer>\n                    <LinkContainer to=\"/following\">\n                      <Nav.Link>\n                        Following\n                        <br />\n                        <Badge>\n                          {this.props.following.length}\n                        </Badge>\n                      </Nav.Link>\n                    </LinkContainer>\n                    {/* <LinkContainer to=\"/likes\">\n                      <Nav.Link>\n                        Likes\n                        <br />\n                        <Badge>\n                          {this.props.starred.length}\n                        </Badge>\n                      </Nav.Link>\n                    </LinkContainer> */}\n                  </Nav>\n                  <Nav>\n                    <Nav.Link className=\"text-center external\"\n                              onClick={this.resyncData}\n                              disabled={this.props.isLoading(this.props.loading) || this.props.resync}>\n                        <span className=\"mr-1 ml-1\">Sync</span>\n                        <FontAwesomeIcon icon={faSync}\n                                         size=\"1x\"\n                                         spin={this.props.isLoading(this.props.loading) || this.props.resync} />\n                    </Nav.Link>\n                    <Nav.Link className=\"text-center external\" href={info.repo} target=\"_blank\">\n                        <span className=\"mr-1 ml-1\">Fork</span>\n                        <FontAwesomeIcon icon={faGithubSquare} size=\"1x\" />\n                    </Nav.Link>\n                  </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\n\nexport default connect(mapStateToProps, { getInfo, getStarred, getRepos, getContributions,\n                                          getFollowing, resyncData, dataSynced })(Navigation)\n","import { GET_INFO, GET_REPOS, GET_FOLLOWING, GET_STARRED, RESYNC_DATA, DATA_SYNCED, GET_CONTRIBUTIONS } from './constants'\n\n\nexport function getInfo() {\n    return {type: GET_INFO}\n}\n\n\nexport function getRepos() {\n    return {type: GET_REPOS}\n}\n\n\nexport function getFollowing() {\n    return {type: GET_FOLLOWING}\n}\n\n\nexport function getStarred() {\n    return {type: GET_STARRED}\n}\n\n\nexport function getContributions() {\n    return {type: GET_CONTRIBUTIONS}\n}\n\n\nexport function resyncData() {\n    return {type: RESYNC_DATA}\n}\n\n\nexport function dataSynced() {\n    return {type: DATA_SYNCED}\n}\n","import React, { Fragment } from 'react'\nimport { Animated, AnimatedProps } from 'react-animated-css'\n\n\ninterface AnimateProps{\n    animate:boolean\n    animation:AnimatedProps\n}\n\n\nexport default class Animate extends React.Component<AnimateProps> {\n    render() {\n        return this.props.animate\n            ? <Animated children={this.props.children} {...this.props.animation} />\n            : <Fragment children={this.props.children} />\n    }\n}\n","import React from 'react'\nimport { Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\n\nimport Animate from './Animate'\n\n\nexport default class LoadingOverlay extends React.Component {\n    render() {\n        return (\n            <Col className=\"text-center d-flex align-items-center justify-content-center min-vh-100\">\n                <Animate animate\n                         animation={{animationIn: 'fadeIn',\n                                     animationOut: 'fadeOut',\n                                     isVisible: true}}>\n                    <FontAwesomeIcon spin icon={faSpinner} size=\"5x\" />\n                </Animate>\n            </Col>\n        )\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row } from 'react-bootstrap'\nimport { withRouter, RouteComponentProps } from 'react-router'\n\nimport LoadingOverlay from '../components/Loading'\n\n\ninterface LoadingContainerProps extends RouteComponentProps {\n    loading:Loading\n}\n\n\nclass LoadingContainer extends React.Component<LoadingContainerProps> {\n    isLoading(props?:LoadingContainerProps) {\n        props = props || this.props\n\n        switch(props.location.pathname) {\n            case '/likes':\n                return props.loading.starred\n            case '/contributions':\n                return props.loading.contributions\n            case '/projects':\n                return props.loading.repos\n            case '/following':\n                return props.loading.following\n            case '/':\n                return props.loading.info\n            default:\n                return false\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.isLoading()\n                    ? <Row> <LoadingOverlay /> </Row>\n                    : this.props.children}\n            </Container>\n        )\n    }\n}\n\n\nexport default withRouter(connect((state:State) => ({loading: state.loading}))(LoadingContainer))\n","import React, { ComponentElement } from 'react'\nimport { Col, Card, Image } from 'react-bootstrap'\nimport { AnimatedProps } from 'react-animated-css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core'\n\nimport { AnimationContext } from '../globas'\nimport Animate from './Animate'\nimport { isEmpty } from '../utils'\n\n\ninterface Footer {\n    right?:ComponentElement<any, any>|string\n    left?:ComponentElement<any, any>|string\n    center?:ComponentElement<any, any>|string\n}\n\n\ninterface PanelProps {\n    measures?:BSMeasures\n    animate?:boolean\n    animation:AnimatedProps\n    header:TextObj\n    body:TextObj\n    goto?:string\n    clickAnimation?:ClickAnimation\n    img?:any\n    icon?:IconDefinition\n    className?:string\n    footer?:Footer\n}\n\n\nexport default class Panel extends React.Component<PanelProps> {\n    animator:any\n\n    static contextType = AnimationContext\n\n    constructor(props:PanelProps) {\n        super(props)\n\n        this.animator = React.createRef()\n    }\n\n    handleClick = (e:any) => {\n        const { clickAnimation, goto } = this.props\n\n        if (this.animator.current) {\n            this.animator.current.setState({delay: 0})\n            if (!isEmpty(clickAnimation) && this.animator.current && goto) {\n                this.animator.current.setState(clickAnimation)\n                setTimeout(() => {\n                    window.open(goto, '_blank')\n                    this.animator.current?.setState({animation: ''})\n                }, 800)\n            }            \n        } else window.open(goto, '_blank')\n    }\n\n    render() {\n        const { measures, animation, header, body, img, icon, clickAnimation, goto, animate,\n                ...rest } = this.props\n        const showAnimation = typeof animate === 'undefined' ? this.context : !!animate\n\n        return (\n            <Col md={{span: 10, offset: 1}} lg {...rest}>\n                <Animate animate={showAnimation}\n                         animation={Object.assign({}, animation, {ref: this.animator})}>\n                    <Card onClick={this.handleClick}\n                          className={this.props.goto ? 'card-clickable' : ''}>\n                        <Card.Header>\n                            <Col className={header.className}\n                                 style={header.style}>\n                                {header.text}\n                            </Col>\n                        </Card.Header>\n                        <Card.Body>\n                            <Col className=\"mb-2\">\n                                {!!img && <Image rounded fluid {...img} />}\n                                {!!icon && <FontAwesomeIcon icon={icon} size=\"3x\" />}\n                            </Col>\n                            <Col className={body.className}\n                                 style={body.style}>\n                                {body.text}\n                            </Col>\n                        </Card.Body>\n                        {!!this.props.footer && <Card.Footer>\n                            <Col>\n                                {!!this.props.footer?.left && <i className='float-left'>{this.props.footer.left}</i>}\n                                {!!this.props.footer?.right && <i className='float-right'>{this.props.footer.right}</i>}\n                                {!!this.props.footer?.center && this.props.footer.center}\n                            </Col>\n                        </Card.Footer>}\n                    </Card>\n                </Animate>\n            </Col>\n        )\n    }\n}\n","import React from 'react'\n\ninterface CursorProps {\n    text:string\n}\n\nexport default class Cursor extends React.Component<CursorProps, {}> {\n    render() {\n        return (\n            <>\n                <h1 className='cursored'>{this.props.text}</h1>\n                <div className='cursor'></div>\n            </>\n        )\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport Panel from '../components/Panel'\nimport Cursor from '../components/Cursor'\nimport info from '../config.json'\n\n\ninterface InfoProps {\n    info:Info\n    loading:Loading\n    enableNavigation:Function\n    disableNavigation:Function\n}\n\n\nfunction navLink (title:string, path:string) {\n    return (\n        <LinkContainer to={path}>\n            <a href=\"/\" className='intro-nav-link'>{title}</a>\n        </LinkContainer>\n    )\n}\n\nclass Intro extends React.Component<InfoProps> {\n    componentDidMount() {\n        window.scrollTo(0, document.body.scrollHeight)\n    }\n\n    render() {\n        return <Panel className='text-center d-flex align-items-center min-vh-100 vw-100'\n                   goto={''}\n                   clickAnimation={{animation: 'bounceOut', delay: 0}}\n                   animation={{animationIn: 'bounceIn',\n                               animationInDelay: 500,\n                               animationOut: 'bounceOut',\n                               isVisible: true}}\n                   header={{text: ''}}\n                   footer={{center: ''}}\n                   body={{\n                        text: (<>\n                            <Cursor text={'Hello, world...'}/>\n                            <p className='mt-5 intro-text'>{info.intro.join(' ')}</p>\n                            <div className='mt-5 intro-text'>\n                                You can navigate to my open-source {navLink('Projects', '/projects')},\n                                my {navLink('Contributions', '/contributions')} to other projects,<br/>\n                            </div>\n                            <div className='mt-2 intro-text'>\n                                and if you're interested, feel free to browse my <a target=\"_link\" href={`${window.location.origin}/cv.pdf`} className='intro-nav-link'>Resume</a>\n                            </div>\n                        </>),\n                        style: {fontSize: '120%'},\n                        className: 'mt-4 mb-4'\n                    }} />\n    }\n}\n\n\nexport default connect((state:State) => ({info: state.info,\n                                          loading: state.loading}))(Intro)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Row } from 'react-bootstrap'\nimport { AnimationString } from 'react-animated-css'\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThumbsUp, faCog } from '@fortawesome/free-solid-svg-icons'\n\nimport Panel from '../components/Panel'\nimport { getChunks } from '../utils'\n\n\ninterface ProjectsCompProps {\n    repos:Repository[]\n    animation:AnimationString\n    toggleAnimation:Function\n    icon:IconDefinition\n}\n\n\nclass ProjectsComp extends React.Component<ProjectsCompProps> {\n    componentDidMount() {\n        window.scroll(0, 0)\n        this.props.toggleAnimation()\n    }\n\n    render() {\n        let counter = 0\n\n        return getChunks(this.props.repos\n                   .filter((repo:Repository) => !repo.fork), 3)\n                   .map((chunk, index) => {\n                    return (<Row key={Math.random().toString()}>\n                        {chunk.map(repo => <Panel className=\"text-center mt-3 mb-3 m-2\"\n                                                  goto={repo.html_url}\n                                                  key={repo.id.toString()}\n                                                  icon={this.props.icon}\n                                                  animation={{animationIn: this.props.animation,\n                                                              animationOut: 'fadeOut',\n                                                              animationInDelay: ++counter * 100,\n                                                              isVisible: true}}\n                                                  clickAnimation={{animation: 'bounceOut'}}\n                                                  header={{text: repo.name,\n                                                           className: 'h4 mt-2'}}\n                                                  footer={{right:<><FontAwesomeIcon icon={faThumbsUp} /> {repo.stargazers_count} </>,\n                                                           left:<><FontAwesomeIcon icon={faCog} /> {repo.language || 'Unrecognized'} </>}}\n                                                  body={{text: repo.description,\n                                                         style: {fontSize: '120%'},\n                                                         className: 'mt-1 mb-1'}} />)}\n                    </Row>)})\n    }\n}\n\n\nexport const Projects = connect((state:State) => ({repos: state.repos}))(ProjectsComp)\nexport const Likes = connect((state:State) => ({repos: state.starred}))(ProjectsComp)\nexport const Contributions = connect((state:State) => ({repos: state.contributions}))(ProjectsComp)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Row } from 'react-bootstrap'\nimport { AnimationString } from 'react-animated-css'\n\nimport Panel from '../components/Panel'\nimport { getChunks } from '../utils'\n\n\ninterface ProjectsProps {\n    following:Info[]\n    loading:Loading\n    animation:AnimationString\n    toggleAnimation:Function\n}\n\n\nclass Following extends React.Component<ProjectsProps> {\n    componentDidMount() {\n        window.scroll(0, 0)\n        this.props.toggleAnimation()\n    }\n\n    render() {\n        let counter = 0\n\n        return getChunks(this.props.following, 3)\n                  .map((chunk, index) => {\n                   return (<Row className=\"d-flex justify-content-center\" key={Math.random().toString()}>\n                       {chunk.map(user => <Panel className=\"text-center mt-3 mb-3 m-2\"\n                                                 goto={user.html_url}\n                                                 key={user.id.toString()}\n                                                 img={{src: user.avatar_url}}\n                                                 animation={{animationIn: this.props.animation,\n                                                             animationOut: 'fadeOutRight',\n                                                             animationInDelay: ++counter * 100,\n                                                             isVisible: true}}\n                                                 clickAnimation={{animation: 'bounceOut'}}\n                                                 header={{text:<i>({user.login})</i>,\n                                                          className: 'h4 mt-2'}}\n                                                 body={{text: user.html_url,\n                                                        style: {fontSize: '120%'},\n                                                        className: 'mt-1 mb-1'}} />)}\n                   </Row>)})\n    }\n}\n\n\nexport default connect((state:State) => ({following: state.following,\n                                          loading: state.loading}))(Following)\n","import React from 'react'\nimport { animateScroll as scroll, Events } from 'react-scroll'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons'\n\n\ninterface TopState {\n    height:number\n}\n\n\nexport default class Top extends React.Component<{}, TopState> {\n    constructor(props:{}) {\n        super(props)\n        \n        this.state = {height: document.body.scrollHeight}\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.updateHight)\n        Events.scrollEvent.register('end', this.resetHeight)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.updateHight)\n        Events.scrollEvent.remove('end')\n    }\n\n    updateHight = () => this.setState({height: document.body.scrollHeight})\n    resetHeight = () => this.setState({height: 0})\n    shouldShow = () =>  this.state.height > 1070 && window.scrollY > 72\n    scrollTop = () => scroll.scrollToTop()\n\n    render() {\n        return (\n            <button className={`top animated ${this.shouldShow() ? 'fadeInRight' : 'fadeOutRight'}`}\n                    onClick={this.scrollTop}\n                    style={{opacity: this.shouldShow() ? 0 : 100}}>\n                <FontAwesomeIcon icon={faArrowUp} size=\"3x\" />\n            </button>\n        )\n    }\n}\n","import './index.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\nimport { Row } from 'react-bootstrap'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { AnimationString } from 'react-animated-css'\n\nimport store from './state/store'\nimport { AnimationContext } from './globas'\nimport ErrorHandler from './containers/ErrorHandler'\nimport Navigation from './containers/Navigation'\nimport Container from './containers/LoadingContainer'\nimport Intro from './containers/Intro'\nimport { Projects, Likes, Contributions } from './containers/Projects'\nimport Following from './containers/Following'\nimport Top from './components/Top'\n\n\ninterface MainState {\n    animation:AnimationString\n}\n\n\nclass Main extends React.Component<{}, MainState> {\n    constructor(props:{}) {\n        super(props)\n\n        this.state = {\n            animation: 'fadeInRight',\n        }\n    }\n\n    componentDidMount() {\n        this.toggleAnimation()\n    }\n\n    isLoading = (loading:Loading):boolean => Object.values(loading).some(status => status)\n    isLargeScreen = () => window.screen.width > 576\n    toggleAnimation = () => this.setState({\n        animation: this.state.animation === 'fadeInRight' ? 'fadeInLeft' : 'fadeInRight'\n    })\n\n    render() {\n        return (\n            <ErrorHandler>\n                <Router>\n                    <Provider store={store}>\n                    <AnimationContext.Provider value={this.isLargeScreen()}>\n                        <Navigation isLoading={this.isLoading} />\n                        <Container>\n                            <Row>\n                                <Switch>\n                                    <Route exact path=\"/\" component={Intro} />\n                                    <Route path=\"/projects\">\n                                        <Projects animation={this.state.animation}\n                                                  toggleAnimation={this.toggleAnimation}\n                                                  icon={faGithub} />\n                                    </Route>\n\n                                    <Route path=\"/contributions\">\n                                        <Contributions animation={this.state.animation}\n                                                       toggleAnimation={this.toggleAnimation}\n                                                       icon={faGithub} />\n                                    </Route>\n\n                                    <Route path=\"/following\">\n                                        <Following animation={this.state.animation} \n                                                   toggleAnimation={this.toggleAnimation}/>\n                                    </Route>\n\n                                    <Route path=\"/likes\">\n                                        <Likes animation={this.state.animation}\n                                               toggleAnimation={this.toggleAnimation}\n                                               icon={faGithub} />\n                                    </Route>\n\n                                    <Redirect to=\"/\" />\n                                </Switch>\n                            </Row>\n                        </Container>\n                        <Top />\n                    </AnimationContext.Provider>\n                    </Provider>\n                </Router>\n            </ErrorHandler>\n        )\n    }\n}\n\n\nReactDOM.render(<Main />, document.getElementById('root-container'))\nserviceWorker.unregister()\n"],"sourceRoot":""}